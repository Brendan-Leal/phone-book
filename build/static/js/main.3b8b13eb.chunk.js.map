{"version":3,"sources":["components/ContactForm.js","components/Contacts.js","components/ErrorNotification.js","components/Filter.js","components/SuccessNotification.js","services/persons.js","App.js","index.js"],"names":["ContactForm","newName","newNumber","onNameChange","onNumberChange","onSubmit","value","onChange","placeholder","type","Contacts","contacts","filterTerm","deletePerson","filter","contact","name","toLowerCase","includes","map","number","onClick","id","ErrorNotification","message","className","Filter","term","SuccessNotification","baseURL","getAll","axios","get","then","res","data","makeNewPerson","newPerson","post","catch","e","console","log","delete","updatePerson","person","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilterTerm","successMessage","setSuccessNotification","errorMessage","setErrorMessage","useEffect","personsService","returnedPersons","target","preventDefault","some","personToUpdate","find","updatedPerson","window","confirm","p","setTimeout","error","alert","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b8b13eb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactForm = ({ newName, newNumber, onNameChange, onNumberChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input placeholder={\"555-555-5555\"} value={newNumber} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button value={newNumber} type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;","import { React } from \"react\";\n\n\nconst Contacts = ({ contacts, filterTerm, deletePerson }) => {\n  function applyFilter() {\n    return contacts.filter(contact => {\n      let name = contact.name.toLowerCase();\n      return name.includes(filterTerm.toLowerCase());\n    });\n  }\n\n  return (\n    <ul>\n      {applyFilter().map(contact => {\n        return (\n          <li key={contact.name}>\n            {contact.name}: {contact.number}\n            <button onClick={deletePerson(contact.id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Contacts;","import React from \"react\";\n\nfunction ErrorNotification({ message }) {\n  if (message == null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  );\n}\n\nexport default ErrorNotification;","import { React } from \"react\";\n\nconst Filter = ({ term, onChange }) => {\n  return (\n    <div>\n      Filter By Name: <input value={term} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from \"react\";\n\nfunction SuccessNotification({ message }) {\n  if (message == null) {\n    return null;\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  );\n}\n\nexport default SuccessNotification;","import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nfunction getAll() {\n  return axios\n    .get(baseURL)\n    .then(res => {\n      return res.data;\n    });\n}\n\nfunction makeNewPerson(newPerson) {\n  return axios\n    .post(baseURL, newPerson)\n    .then(res => {\n      return res.data;\n    }).catch(e => console.log(e));\n}\n\nfunction deletePerson(id) {\n  return axios\n    .delete(`${baseURL}/${id}`)\n    .then(res => res.data);\n}\n\nfunction updatePerson(person) {\n  return axios\n    .put(`${baseURL}/${person.id}`, person)\n    .then(res => {\n      return res.data;\n    });\n}\n\nexport default {\n  getAll,\n  makeNewPerson,\n  deletePerson,\n  updatePerson,\n};","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ContactForm from \"./components/ContactForm.js\";\nimport Contacts from \"./components/Contacts.js\";\nimport ErrorNotification from './components/ErrorNotification';\nimport Filter from \"./components/Filter.js\";\nimport SuccessNotification from './components/SuccessNotification';\nimport personsService from \"./services/persons.js\";\n\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterTerm, setNewFilterTerm] = useState(\"\");\n  const [successMessage, setSuccessNotification] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  function _isExistingPerson() {\n    return persons.some(person => {\n      return person.name === newName && person.number !== newNumber;\n    });\n  }\n\n  function _findPersonToUpdate() {\n    return persons.find(person => {\n      return person.name === newName && person.number !== newNumber;\n    });\n  }\n\n  function _userConfimationToUpdate() {\n    return window.confirm(`${newName} is already in the phonebook do you want to update that persons phone number?`);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (_isExistingPerson()) {\n      let personToUpdate = _findPersonToUpdate();\n      let updatedPerson = { ...personToUpdate, number: newNumber };\n\n      if (_userConfimationToUpdate()) {\n        personsService\n          .updatePerson(updatedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(p => {\n              if (p.id === updatedPerson.id) {\n                return updatedPerson;\n              } else {\n                return p;\n              }\n            }));\n            setSuccessNotification(`Successfully updated ${updatedPerson.name} `);\n            setTimeout(() => {\n              setSuccessNotification(null);\n            }, 6000);\n          })\n          .catch(error => {\n            setErrorMessage(`Already removed ${newName} from server`);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n\n      }\n    } else if (persons.some(person => person.name === newName)) {\n      alert(`${newName} is already in the phonebook`);\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personsService\n        .makeNewPerson(newPerson)\n        .then(returnedPersons => {\n          setPersons(persons.concat(returnedPersons));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setSuccessNotification(`Successfully created ${returnedPersons.name} `);\n          setTimeout(() => {\n            setSuccessNotification(null);\n          }, 3000);\n        });\n    }\n  }\n\n  function handleNameChange(e) {\n    setNewName(e.target.value);\n  };\n\n  function handleNumberChange(e) {\n    setNewNumber(e.target.value);\n  };\n\n  function handleFilterChange(e) {\n    setNewFilterTerm(e.target.value.toLowerCase());\n  }\n\n  const handleDeletionOfPerson = (id) => {\n    return () => {\n      const newPersons = persons.filter(p => p.id !== id);\n      if (window.confirm(\"Are you sure you want to delete them?\")) {\n        personsService\n          .deletePerson(id)\n          .then(() => {\n            setPersons(newPersons);\n          });\n      }\n    };\n  };\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(returnedPersons => {\n        setPersons(returnedPersons);\n      });\n  }, []);\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <ContactForm\n        newName={newName}\n        newNumber={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        onSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Filter term={filterTerm} onChange={handleFilterChange} />\n      <Contacts deletePerson={handleDeletionOfPerson} contacts={persons} filterTerm={filterTerm} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}